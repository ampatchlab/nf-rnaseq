manifest {

  author = 'Stephen Kazakoff'
  homePage = 'https://github.com/ampatchlab/nf-rnaseq'
  description = 'RNA-Seq nextflow pipeline'
  version = '1.0'
}

params {

  csv = null
  paired_end = false
  rgid_sep = '.'

  // reference genome params
  genome = null

  genomes {
    'GRCh38' {
      fasta = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_31/GRCh38.primary_assembly.genome.fa.gz'
      gtf   = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_31/gencode.v31.primary_assembly.annotation.gtf.gz'
    }
    'GRCm38' {
      fasta = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M22/GRCm38.primary_assembly.genome.fa.gz'
      gtf   = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M22/gencode.vM22.primary_assembly.annotation.gtf.gz'
    }
  }

  // adapter params
  adapters = 'TruSeq'

  seq_adapters {
    'TruSeq' {
      r1 = 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'
      r2 = 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'
    }
    'null' {
      r1 = null
      r2 = null
    }
  }

  // STAR genome generate params
  star_genome_chr_bin_n_bits = 18
  star_genome_sa_index_n_bases = 14
  star_sjdb_overhang = 100

  // Cutadapt params
  cutadapt_base_qual_cutoff = 20
  cutadapt_min_read_length = 20

  // RSEM mparams
  rsem_fragment_length_min = 1
  rsem_fragment_length_max = 1000
  rsem_fragment_length_mean = -1
  rsem_fragment_length_sd = 0
  rsem_estimate_rspd = false
  rsem_num_rspd_bins = 20
  rsem_seed_length = 25

  // RSEM Gibbs
  gibbs_burnin = 200
  gibbs_num_samples = 1000
  gibbs_sampling_gap = 1

  // RSEM CalcCI
  ci_credibility_level = 0.95
  ci_num_samples_per_count_vector = 50

  // MultiQC params
  multiqc_config = "${baseDir}/assets/multiqc_config.yaml"

  // output params
  outdir = './results'
  refdir = './reference'

  // report params
  execution_report = './reports/execution_report.html'
  trace_report = './reports/trace_report.txt'
  timeline_report = './reports/timeline_report.html'
  flowchart = './reports/flowchart.png'

  // AWS Batch options
  aws_queue = false
  aws_region = false

  // standard options
  help = false
  version = false
}

process {

  shell = ['/bin/bash', '-euo', 'pipefail']
}

report {

  enabled = true
  file = params.execution_report
}

trace {

  enabled = true
  file = params.trace_report
}

timeline {

  enabled = true
  file = params.timeline_report
}

dag {

  enabled = true
  file = params.flowchart
}

includeConfig 'conf/base.config'

profiles {

  'awsbatch' {
    includeConfig 'conf/containers.config'
    includeConfig 'conf/awsbatch.config'
  }

  'conda' {
    includeConfig 'conf/conda.config'
  }

  'docker' {
    includeConfig 'conf/containers.config'
    docker.enabled = true
  }

  'singularity' {
    includeConfig 'conf/containers.config'
    singularity.enabled = true
  }

  // institute configs

  'qimrb' {
    includeConfig 'conf/qimrb.config'
  }

  // test configs

  'HBR_UHR_ERCC-SE' {
    includeConfig 'conf/HBR_UHR_ERCC-SE.config'
  }

  'HBR_UHR_ERCC-PE' {
    includeConfig 'conf/HBR_UHR_ERCC-PE.config'
  }

  'HCC1395-SE' {
    includeConfig 'conf/HCC1395-SE.config'
  }

  'HCC1395-PE' {
    includeConfig 'conf/HCC1395-PE.config'
  }
}

def max_cpus(cpus) {
    return cpus > params.max_cpus ? params.max_cpus : cpus
}

def max_memory(memory) {
    return memory > params.max_memory ? params.max_memory : memory
}

def max_time(time) {
    return time > params.max_time ? params.max_time : time
}
